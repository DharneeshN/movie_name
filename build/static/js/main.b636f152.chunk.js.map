{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","movieinfo","setMovieinfo","title","setTitle","getmoviedata","url","fetch","then","response","json","movie","console","log","catch","err","useEffect","className","type","placeholder","onChange","events","value","target","onClick","undefined","Error","src","Poster","Title","Genre","Language","Actors","Director","Plot","Runtime","Ratings","Source","Value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNA0FeA,MAjFf,WAGA,MAA+BC,mBAAS,MAAxC,mBAAKC,EAAL,KAAeC,EAAf,KACA,EAAuBF,mBAAS,SAAhC,mBAAKG,EAAL,KAAWC,EAAX,KAWE,SAASC,IAEP,IAAIC,EAAI,8BAAD,OAAgCH,EAAhC,qBAEPI,MAAMD,GACLE,MAAK,SAACC,GAAD,OAAYA,EAASC,UAC1BF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZT,EAAaS,MAGdG,OAAM,SAACC,GAAOH,QAAQC,IAAIE,MAM9B,OA3BCC,qBAAU,WACPX,MAED,IAyBA,gCAGE,qBAAKY,UAAU,YAAf,SACE,sBAAKA,UAAU,SAAf,UACE,4CACA,sBAAKA,UAAU,cAAf,UACG,uBAAOC,KAAK,OAAOC,YAAY,mBAAmBC,SAAU,SAACC,GA9BxE,IAAmBC,IA8ByED,EAAOE,OAAOD,MA7BxGlB,EAASkB,IA6BwGL,UAAU,iBAClH,wBAAQA,UAAU,MAAMO,QAASnB,EAAjC,4BAGkBoB,KAAV,OAATxB,QAAS,IAATA,OAAA,EAAAA,EAAWyB,OACb,sBAAKT,UAAU,QAAf,UACE,qBAAKA,UAAU,SAAf,SACC,qBAAKU,IAAG,OAAE1B,QAAF,IAAEA,OAAF,EAAEA,EAAW2B,OAAQX,UAAU,iBAExC,sBAAKA,UAAU,UAAf,UACG,sBAAKA,UAAU,SAAf,UACE,oCAAKhB,QAAL,IAAKA,OAAL,EAAKA,EAAW4B,QAChB,8BAAG,8CAAH,OAA6B5B,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAW6B,SACxC,8BAAG,iDAAH,OAAgC7B,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAW8B,YAC3C,8BAAG,+CAAH,OAA8B9B,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAW+B,UACzC,8BAAG,iDAAH,OAAgC/B,QAAhC,IAAgCA,OAAhC,EAAgCA,EAAWgC,YAC3C,8BAAG,6CAAH,OAA4BhC,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAWiC,QACvC,8BAAG,gDAAH,OAA+BjC,QAA/B,IAA+BA,OAA/B,EAA+BA,EAAWkC,cAEzC,qBAAKlB,UAAU,SAAf,SACC,gCACE,wCAAShB,QAAT,IAASA,OAAT,EAASA,EAAWmC,QAAQ,GAAGC,SAC9B,oCAAKpC,QAAL,IAAKA,OAAL,EAAKA,EAAWmC,QAAQ,GAAGE,mBAQhC,sDAKV,qBAAKrB,UAAU,OAAf,6DCxEQsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b636f152.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable no-template-curly-in-string */\n/* eslint-disable jsx-a11y/alt-text */\n\nimport './App.css';\nimport{useState,useEffect} from 'react';\n\n\n\nfunction App() {\n\n   \nlet [movieinfo,setMovieinfo] = useState(null);\nlet [title,setTitle] = useState(\"kumki\");\n  useEffect(()=>{\n     getmoviedata();\n  \n  },[])\n\n  function readTitle(value){\n    setTitle(value);\n    \n   }\n\n  function getmoviedata(){\n\n    let url= `https://www.omdbapi.com/?t=${title}&apikey=675de33e ` ;\n    \n    fetch(url) \n    .then((response)=>response.json())\n    .then((movie)=>{\n      console.log(movie);\n      setMovieinfo(movie);\n       \n    })\n    .catch((err)=>{console.log(err);\n    })\n\n  }\n   \n  \n return (\n    <div  >\n     \n\n      <div className=\"container\" >\n        <div className=\"paddin\" >\n          <h1>Movie name</h1>\n          <div className=\"Input-group\">\n             <input type=\"text\" placeholder=\"Enter movie name\" onChange={(events)=>{readTitle(events.target.value)}} className=\"search-field\"/>  \n             <button className=\"btn\" onClick={getmoviedata}>Search</button> \n          </div>\n          {\n            movieinfo?.Error===undefined?(\n          <div className=\"movie\">\n            <div className=\"poster\">\n             <img src={movieinfo?.Poster} className=\"img-Poster\"/>\n            </div>\n            <div className=\"details\">\n               <div className=\"paddin\">\n                 <h2>{movieinfo?.Title}</h2>\n                 <p><strong>Genre : </strong>{movieinfo?.Genre}</p>\n                 <p><strong>Language : </strong>{movieinfo?.Language}</p>\n                 <p><strong>Actors : </strong>{movieinfo?.Actors}</p>\n                 <p><strong>Director : </strong>{movieinfo?.Director}</p>\n                 <p><strong>Plot : </strong>{movieinfo?.Plot}</p>\n                 <p><strong>Runtime : </strong>{movieinfo?.Runtime}</p>\n                 </div>\n                  <div className=\"paddin\">\n                   <div>\n                     <strong>{movieinfo?.Ratings[0].Source}</strong>\n                      <h3>{movieinfo?.Ratings[0].Value}</h3> \n                   </div>\n                 </div> \n                 \n           </div>\n          </div>\n               ):\n               (\n                 <h1>Movie not found</h1>\n               )         \n            }\n        </div>\n       </div>\n       <div className=\"copy\"> Â©COPYRIGHT RESERVED 2021 - BY Dharneesh</div>\n    </div>\n                    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}